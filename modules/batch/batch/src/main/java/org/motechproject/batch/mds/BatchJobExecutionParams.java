package org.motechproject.batch.mds;

// Generated Apr 11, 2014 10:49:43 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.motechproject.batch.util.BatchConstants;

/**
 * BatchJobExecutionParams generated by hbm2java
 */
@Entity
@Table(name = "batch_job_execution_params", schema = "batch")
public class BatchJobExecutionParams implements java.io.Serializable {

    private static final long serialVersionUID = 123284600272924568L;
    private long jobExecutionParamsId;
    private BatchJobExecution batchJobExecution;
    private String typeCd;
    private String keyName;
    private String stringVal;
    private Date dateVal;
    private Long longVal;
    private Double doubleVal;
    private char identifying;
    private String createdBy;
    private String lastUpdatedBy;

    public BatchJobExecutionParams() {
    }

    public BatchJobExecutionParams(long jobExecutionParamsId,
            BatchJobExecution batchJobExecution, String typeCd, String keyName,
            char identifying) {
        this.jobExecutionParamsId = jobExecutionParamsId;
        this.batchJobExecution = batchJobExecution;
        this.typeCd = typeCd;
        this.keyName = keyName;
        this.identifying = identifying;
    }


    @Id
    @Column(name = "job_execution_params_id", unique = true, nullable = false)
    public long getJobExecutionParamsId() {
        return this.jobExecutionParamsId;
    }

    public void setJobExecutionParamsId(long jobExecutionParamsId) {
        this.jobExecutionParamsId = jobExecutionParamsId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "job_execution_id", nullable = false)
    public BatchJobExecution getBatchJobExecution() {
        return this.batchJobExecution;
    }

    public void setBatchJobExecution(BatchJobExecution batchJobExecution) {
        this.batchJobExecution = batchJobExecution;
    }

    @Column(name = "type_cd", nullable = false, length = BatchConstants.TYPE_CD_LENGTH)
    public String getTypeCd() {
        return this.typeCd;
    }

    public void setTypeCd(String typeCd) {
        this.typeCd = typeCd;
    }

    @Column(name = "key_name", nullable = false, length = BatchConstants.KEY_NAME_LENGTH)
    public String getKeyName() {
        return this.keyName;
    }

    public void setKeyName(String keyName) {
        this.keyName = keyName;
    }

    @Column(name = "string_val", length = BatchConstants.STRING_VAL_LENGTH)
    public String getStringVal() {
        return this.stringVal;
    }

    public void setStringVal(String stringVal) {
        this.stringVal = stringVal;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "date_val", length = BatchConstants.DATE_VAL_LENGTH)
    public Date getDateVal() {
        return this.dateVal;
    }

    public void setDateVal(Date dateVal) {
        this.dateVal = dateVal;
    }

    @Column(name = "long_val")
    public Long getLongVal() {
        return this.longVal;
    }

    public void setLongVal(Long longVal) {
        this.longVal = longVal;
    }

    @Column(name = "double_val", precision = BatchConstants.DOUBLE_VAL_PRECISION, scale = BatchConstants.DOUBLE_VAL_SCALE)
    public Double getDoubleVal() {
        return this.doubleVal;
    }

    public void setDoubleVal(Double doubleVal) {
        this.doubleVal = doubleVal;
    }

    @Column(name = "identifying", nullable = false, length = 1)
    public char getIdentifying() {
        return this.identifying;
    }

    public void setIdentifying(char identifying) {
        this.identifying = identifying;
    }

    @Column(name = "created_by", length = BatchConstants.CREATED_BY_LENGTH)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "last_updated_by", length = BatchConstants.LAST_UPDATED_BY_LENGTH)
    public String getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public void setLastUpdatedBy(String lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
    }

}
