package org.motechproject.batch.mds;

// Generated Apr 11, 2014 10:49:43 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.motechproject.batch.util.BatchConstants;

/**
 * BatchStepExecution generated by hbm2java
 */
@Entity
@Table(name = "batch_step_execution", schema = "batch")
public class BatchStepExecution implements java.io.Serializable {

    private static final long serialVersionUID = -3561547158749992271L;
    private long stepExecutionId;
    private long version;
    private String stepName;
    private long jobExecutionId;
    private Date startTime;
    private Date endTime;
    private String status;
    private Long commitCount;
    private Long readCount;
    private Long filterCount;
    private Long writeCount;
    private Long readSkipCount;
    private Long writeSkipCount;
    private Long processSkipCount;
    private Long rollbackCount;
    private String exitCode;
    private String exitMessage;
    private Date lastUpdated;
    private String createdBy;
    private String lastUpdatedBy;

    public BatchStepExecution() {
    }

    public BatchStepExecution(long stepExecutionId, String stepName,
            long jobExecutionId, Date startTime) {
        this.stepExecutionId = stepExecutionId;
        this.stepName = stepName;
        this.jobExecutionId = jobExecutionId;
        this.startTime = startTime;
    }

    @Id
    @Column(name = "step_execution_id", unique = true, nullable = false)
    public long getStepExecutionId() {
        return this.stepExecutionId;
    }

    public void setStepExecutionId(long stepExecutionId) {
        this.stepExecutionId = stepExecutionId;
    }

    @Version
    @Column(name = "version", nullable = false)
    public long getVersion() {
        return this.version;
    }

    public void setVersion(long version) {
        this.version = version;
    }

    @Column(name = "step_name", nullable = false, length = BatchConstants.STEP_NAME_LENGTH)
    public String getStepName() {
        return this.stepName;
    }

    public void setStepName(String stepName) {
        this.stepName = stepName;
    }

    @Column(name = "job_execution_id", nullable = false)
    public long getJobExecutionId() {
        return this.jobExecutionId;
    }

    public void setJobExecutionId(long jobExecutionId) {
        this.jobExecutionId = jobExecutionId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_time", nullable = false, length = BatchConstants.START_TIME_LENGTH)
    public Date getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    @Column(name = "status", length = BatchConstants.STATUS_LENGTH)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "commit_count")
    public Long getCommitCount() {
        return this.commitCount;
    }

    public void setCommitCount(Long commitCount) {
        this.commitCount = commitCount;
    }

    @Column(name = "read_count")
    public Long getReadCount() {
        return this.readCount;
    }

    public void setReadCount(Long readCount) {
        this.readCount = readCount;
    }

    @Column(name = "filter_count")
    public Long getFilterCount() {
        return this.filterCount;
    }

    public void setFilterCount(Long filterCount) {
        this.filterCount = filterCount;
    }

    @Column(name = "write_count")
    public Long getWriteCount() {
        return this.writeCount;
    }

    public void setWriteCount(Long writeCount) {
        this.writeCount = writeCount;
    }

    @Column(name = "read_skip_count")
    public Long getReadSkipCount() {
        return this.readSkipCount;
    }

    public void setReadSkipCount(Long readSkipCount) {
        this.readSkipCount = readSkipCount;
    }

    @Column(name = "write_skip_count")
    public Long getWriteSkipCount() {
        return this.writeSkipCount;
    }

    public void setWriteSkipCount(Long writeSkipCount) {
        this.writeSkipCount = writeSkipCount;
    }

    @Column(name = "exit_message", length = BatchConstants.EXIT_MESSAGE_LENGTH)
    public String getExitMessage() {
        return this.exitMessage;
    }

    public void setExitMessage(String exitMessage) {
        this.exitMessage = exitMessage;
    }

    @Column(name = "process_skip_count")
    public Long getProcessSkipCount() {
        return this.processSkipCount;
    }

    public void setProcessSkipCount(Long processSkipCount) {
        this.processSkipCount = processSkipCount;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_time", length = BatchConstants.END_TIME_LENGTH)
    public Date getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    @Column(name = "rollback_count")
    public Long getRollbackCount() {
        return this.rollbackCount;
    }

    public void setRollbackCount(Long rollbackCount) {
        this.rollbackCount = rollbackCount;
    }

    @Column(name = "exit_code", length = BatchConstants.EXIT_CODE_LENGTH)
    public String getExitCode() {
        return this.exitCode;
    }

    public void setExitCode(String exitCode) {
        this.exitCode = exitCode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_updated", length = BatchConstants.LAST_UPDATED_LENGTH)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }

    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    @Column(name = "created_by", length = BatchConstants.CREATED_BY_LENGTH)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "last_updated_by", length = BatchConstants.LAST_UPDATED_BY_LENGTH)
    public String getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public void setLastUpdatedBy(String lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
    }

}
