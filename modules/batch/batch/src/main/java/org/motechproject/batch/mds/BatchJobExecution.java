package org.motechproject.batch.mds;

// Generated Apr 11, 2014 10:49:43 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.motechproject.batch.util.BatchConstants;

/**
 * BatchJobExecution generated by hbm2java
 */
@Entity
@Table(name = "batch_job_execution", schema = "batch")
public class BatchJobExecution implements java.io.Serializable {

    private static final long serialVersionUID = 3039803281899589723L;
    private long jobExecutionId;
    private Long version;
    private BatchJobInstance batchJobInstance;
    private Date createTime;
    private Date startTime;
    private Date endTime;
    private String status;
    private String exitCode;
    private String exitMessage;
    private Date lastUpdated;
    private String jobConfigurationLocation;
    private String createdBy;
    private String lastUpdatedBy;
    private Set<BatchJobExecutionParams> batchJobExecutionParamses = new HashSet<BatchJobExecutionParams>(
            0);

    public BatchJobExecution() {
    }

    public BatchJobExecution(long jobExecutionId,
            BatchJobInstance batchJobInstance, Date createTime) {
        this.jobExecutionId = jobExecutionId;
        this.batchJobInstance = batchJobInstance;
        this.createTime = createTime;
    }

   
    @Id
    @Column(name = "job_execution_id", unique = true, nullable = false)
    public long getJobExecutionId() {
        return this.jobExecutionId;
    }

    public void setJobExecutionId(long jobExecutionId) {
        this.jobExecutionId = jobExecutionId;
    }

    @Version
    @Column(name = "version")
    public Long getVersion() {
        return this.version;
    }

    public void setVersion(Long version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "job_instance_id", nullable = false)
    public BatchJobInstance getBatchJobInstance() {
        return this.batchJobInstance;
    }

    public void setBatchJobInstance(BatchJobInstance batchJobInstance) {
        this.batchJobInstance = batchJobInstance;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "create_time", nullable = false, length = BatchConstants.CREATE_TIME_LENGTH)
    public Date getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_time", length = BatchConstants.START_TIME_LENGTH)
    public Date getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_time", length = BatchConstants.END_TIME_LENGTH)
    public Date getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    @Column(name = "status", length = BatchConstants.STATUS_LENGTH)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "exit_code", length = BatchConstants.EXIT_CODE_LENGTH)
    public String getExitCode() {
        return this.exitCode;
    }

    public void setExitCode(String exitCode) {
        this.exitCode = exitCode;
    }

    @Column(name = "exit_message", length = BatchConstants.EXIT_MESSAGE_LENGTH)
    public String getExitMessage() {
        return this.exitMessage;
    }

    public void setExitMessage(String exitMessage) {
        this.exitMessage = exitMessage;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_updated", length = BatchConstants.LAST_UPDATED_LENGTH)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }

    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    @Column(name = "job_configuration_location", length = BatchConstants.JOB_CONFIGURATION_LOCATION_LENGTH)
    public String getJobConfigurationLocation() {
        return this.jobConfigurationLocation;
    }

    public void setJobConfigurationLocation(String jobConfigurationLocation) {
        this.jobConfigurationLocation = jobConfigurationLocation;
    }

    @Column(name = "created_by", length = BatchConstants.CREATED_BY_LENGTH)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "last_updated_by", length = BatchConstants.LAST_UPDATED_BY_LENGTH)
    public String getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public void setLastUpdatedBy(String lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "batchJobExecution")
    public Set<BatchJobExecutionParams> getBatchJobExecutionParamses() {
        return this.batchJobExecutionParamses;
    }

    public void setBatchJobExecutionParamses(
            Set<BatchJobExecutionParams> batchJobExecutionParamses) {
        this.batchJobExecutionParamses = batchJobExecutionParamses;
    }

}
