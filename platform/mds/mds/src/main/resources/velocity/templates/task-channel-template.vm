{
    "displayName": "data-services",
    "triggerTaskEvents": [
        #foreach ( $entity in $Entity.entitiesWithAnyCRUDAction($list) )
        #if ($entity.createEventFired)
        {
            "displayName": "CREATE $entity.entityName",
            "subject":
            #if ("$!entity.module" == "")
                "mds.crud.${entity.entityName}.CREATE",
            #else
                #set ($moduleName = $ClassName.simplifiedModuleName($entity.module))

                #if ("$!entity.namespace" == "")
                    "mds.crud.${moduleName}.${entity.entityName}.CREATE",
                #else
                    "mds.crud.${moduleName}.${entity.namespace}.${entity.entityName}.CREATE",
                #end
            #end
            "namespace": "$entity.namespace",
            "moduleName": "$entity.module",
            "eventParameters": [
                {
                    "displayName": "Entity Class",
                    "eventKey": "entity_name",
                    "type": "UNICODE"
                },
                {
                    "eventKey": "object_id",
                    "displayName": "Id",
                    "type": "LONG"
                }
            ]
        }#if ( $entity.updateEventFired || $entity.deleteEventFired ),#end #end
        #if ($entity.updateEventFired)
        {
            "displayName": "UPDATE $entity.entityName",
            "subject":
            #if ("$!entity.module" == "")
                "mds.crud.${entity.entityName}.UPDATE",
            #else
                #set ($temp = $entity.module.toLowerCase())
                #set ($temp = $temp.replace(" ", ""))

                #if ($temp.startsWith("motechplatform"))
                    #set ($temp = $temp.substring(14))
                #elseif ($temp.startsWith("motech"))
                    #set ($temp = $temp.substring(6))
                #end

                #if ("$!entity.namespace" == "")
                    "mds.crud.${temp}.${entity.entityName}.UPDATE",
                #else
                    "mds.crud.${temp}.${entity.namespace}.${entity.entityName}.UPDATE",
                #end
            #end
            "eventParameters": [
                {
                    "displayName": "Entity Class",
                    "eventKey": "entity_name",
                    "type": "UNICODE"
                },
                {
                    "eventKey": "object_id",
                    "displayName": "Id",
                    "type": "LONG"
                }
            ]
        }#if ( $entity.deleteEventFired ),#end #end
        #if ( $entity.deleteEventFired )
        {
            "displayName": "DELETE $entity.entityName",
            "subject":
            #if ("$!entity.module" == "")
                "mds.crud.${entity.entityName}.DELETE",
            #else
                #set ($temp = $entity.module.toLowerCase())
                #set ($temp = $temp.replace(" ", ""))

                #if ($temp.startsWith("motechplatform"))
                    #set ($temp = $temp.substring(14))
                #elseif ($temp.startsWith("motech"))
                    #set ($temp = $temp.substring(6))
                #end

                #if ("$!entity.namespace" == "")
                    "mds.crud.${temp}.${entity.entityName}.DELETE",
                #else
                    "mds.crud.${temp}.${entity.namespace}.${entity.entityName}.DELETE",
                #end
            #end
            "eventParameters": [
                {
                    "displayName": "Entity Class",
                    "eventKey": "entity_name",
                    "type": "UNICODE"
                },
                {
                    "eventKey": "object_id",
                    "displayName": "Id",
                    "type": "LONG"
                }
            ]
        }#end #if ( $velocityHasNext ),#end
        #end
    ],
    "actionTaskEvents": [
        #foreach ( $entity in $list )
        {
            "name": "${entity.className}.create",
            "displayName": "CREATE $entity.entityName",
            "serviceInterface": "org.motechproject.mds.service.ActionHandlerService",
            "serviceMethod": "create",
            "serviceMethodCallManner": "MAP",
            "actionParameters": [
                {
                    "displayName": "Entity Class",
                    "key": "@ENTITY",
                    "value": "$entity.className",
                    "type": "UNICODE",
                    "required": true,
                    "hidden": true
                },
                #foreach ( $field in $entity.fieldsInfo )
                {
                    "key": "$field.name",
                    "displayName": "$field.displayName",
                    "type": "$field.type",
                    "required": $field.required
                }#if ( $velocityHasNext ),#end
                #end
            ]
        },
        {
            "name": "${entity.className}.update",
            "displayName": "UPDATE $entity.entityName",
            "serviceInterface": "org.motechproject.mds.service.ActionHandlerService",
            "serviceMethod": "update",
            "serviceMethodCallManner": "MAP",
            "actionParameters": [
                {
                    "displayName": "Entity Class",
                    "key": "@ENTITY",
                    "value": "$entity.className",
                    "type": "UNICODE",
                    "required": true,
                    "hidden": true
                },
                {
                    "key": "id",
                    "displayName": "Id",
                    "type": "LONG",
                    "required": true
                }
                #foreach ( $field in $entity.fieldsInfo ),
                {
                    "key": "$field.name",
                    "displayName": "$field.displayName",
                    "type": "$field.type",
                    "required": #if( "id" == $field.name ) true #else false #end
                }
                #end
            ]
        },
        {
            "name": "${entity.className}.delete",
            "displayName": "DELETE $entity.entityName",
            "serviceInterface": "org.motechproject.mds.service.ActionHandlerService",
            "serviceMethod": "delete",
            "serviceMethodCallManner": "MAP",
            "actionParameters": [
                {
                    "displayName": "Entity Class",
                    "key": "@ENTITY",
                    "value": "$entity.className",
                    "type": "UNICODE",
                    "required": true,
                    "hidden": true
                },
                {
                    "key": "id",
                    "displayName": "Id",
                    "type": "LONG",
                    "required": true
                }
            ]
        }#if ( $velocityHasNext ),#end
        #end
    ]
}